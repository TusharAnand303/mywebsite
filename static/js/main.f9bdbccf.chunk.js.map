{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onMouseOut","col","document","getElementById","value","console","log","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","Text","setText","_useState3","color","backgroundColor","_useState4","_useState5","_useState6","heading","event","target","select","onChange","style","placeholder","rows","toUpperCase","showalert","b","toLowerCase","text","setSelectionRange","navigator","clipboard","writeText","newtext","split","join","length","defaultProps","find","Alert","alert","word","lower","charAt","slice","cap","msg","App","setMode","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f9bdbccf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  const theme=()=>{\r\n    var col = document.getElementById('the').value;\r\n    console.log(col);\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n  <div className=\"container-fluid \">\r\n    <a className=\"navbar-brand \" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <input onMouseOut={theme} id =\"the\" type=\"color\"  className=\"my-2\"></input>\r\n          <span className=\"mx-2 b-5\">Use custome theme </span>\r\n        </li>\r\n        \r\n      </ul>\r\n\r\n      <div className=\"form-check form-switch\">   \r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n      <label className={`form-check-label text-${props.mode === 'light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title : PropTypes.string, \r\n    find: PropTypes.string\r\n}\r\n// isRequired is used to set the title \r\nNavbar.defaultProps = {\r\n    // title :'Tushar',\r\n    find : 'search'\r\n}\r\n// For sending default prop types :-----\r\n","import React,{useState, useSyncExternalStore} from 'react'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n    const [Text, setText] = useState(\"\");\r\n\r\n    const uppercase = (event)=> {\r\n        \r\n    let a = Text.toUpperCase();\r\n    setText(a);\r\n    props.showalert(\"Text converted to Uppercase !\", \"success\" );\r\n    \r\n    }\r\n    const lowercase = (event)=> {\r\n        \r\n        let b = Text.toLowerCase();\r\n        setText(b);\r\n        props.showalert(\"Text converted to lowercase !\", \"success\" );\r\n     }\r\n    \r\n    const handelonchange = (event)=> {\r\n        console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const select = (event)=> {\r\n       event.target.select();\r\n    }\r\n\r\n    const extraspace = ()=>{\r\n      let newtext = Text.split(/[ ]+/);\r\n      setText(newtext.join(\" \"));\r\n      console.log(newtext);\r\n      props.showalert(\"Extra space has been removed !\", \"success\" );\r\n    }\r\n\r\n    const copytext = () =>{\r\n      var text = document.getElementById('mybox');\r\n      text.select();\r\n      text.setSelectionRange(0,9999);\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showalert(\"Text copied to clipboard !\", \"success\" );\r\n\r\n    }\r\n\r\n     const [mystyle, setMystyle] = useState(\r\n      {\r\n        color: '#2b2929',\r\n        backgroundColor:'white'\r\n      }\r\n    )\r\n    const [btntext, setbtntext] = useState(\"enable dark mode\")\r\n    const switchit = ()=> {\r\n\r\n      if(mystyle.color == \"white\")\r\n      {\r\n        setMystyle({\r\n          color : '#2b2929',\r\n          backgroundColor : 'white'\r\n        })\r\n        setbtntext(\"Enable dark mode\");\r\n      }\r\n      else\r\n      {\r\n        setMystyle({\r\n          color:'white',\r\n          backgroundColor : '#2b2929'\r\n        })\r\n        setbtntext(\"Enable light mode\");\r\n\r\n      }\r\n\r\n    }\r\n   \r\n\r\n\r\n\r\n// setText(\"new Text\");\r\n  return (\r\n    <>\r\n    <h3 className=\"my-3 \">{props.heading} </h3>\r\n    <div className=\"input-group\">\r\n    \r\n        <textarea onClick={select} onChange={handelonchange} value = {Text} id=\"mybox\" className=\"form-control\" style={{backgroundColor : props.mode === 'dark'?'#2b2929':'white',color: props.mode === 'dark'?'white':'black'}} \r\n         placeholder=\"Enter the text\" rows=\"8\"></textarea>\r\n        \r\n    </div>\r\n   \r\n    <div className=\"btn-group my-5\" >\r\n      <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    Choose To change Text\r\n  </button>\r\n    <ul className=\"dropdown-menu\" >\r\n        <li><a onClick={uppercase} className=\"dropdown-item\" href=\"#\">UpperCase </a></li>\r\n        <li><a onClick={lowercase}className=\"dropdown-item\" href=\"#\">LowerCase </a></li>\r\n        <li><a onClick={copytext}className=\"dropdown-item\" href=\"#\">Copy all text </a></li>\r\n        <li><a onClick={extraspace}className=\"dropdown-item\" href=\"#\">Remove extra space </a></li>\r\n        \r\n    </ul>\r\n    </div>\r\n    <div className=\"container\">\r\n      <h1>Your Text sumarry</h1>\r\n      <p>total {Text.split(\" \").length} words and {Text.length} characters</p>\r\n      <p>Average human takes {0.008 * Text.split(\" \").length} minutes to read the word !</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const cap =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && \r\n    <div>\r\n     <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <srtong>{cap(props.alert.type)}</srtong> {props.alert.msg}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React, {useState} from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n\nconst [mode, setMode] = useState('light');\nconst [alert, setAlert] = useState(null);\n\nconst showalert =(message, type)=>{\n  setAlert({\n    msg : message,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000);\n}\n\nconst toggleMode = ()=>{\n  if(mode=='light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#515354';\n    document.body.style.color = '#ffffff';\n    showalert(\"Dark mode has been applied !\", \"success\" );\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = '#ffffff';\n    document.body.style.color = 'black';\n    showalert(\"Light mode has been applied !\", \"success\" );\n\n  }\n}\n  return (\n  <>\n   {/* <Router> */}\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}></Alert>\n\n<div className=\"container my-5\">\n      {/* <Routes> */}\n              {/* <Route exact path=\"/about\" element={<About/>}>\n                \n              </Route>\n              <Route exact path=\"/\" element={<Textform showalert={showalert} heading=\"Text Changer\" mode={mode}/>}>\n              </Route>\n        </Routes> */}\n  <Textform showalert={showalert} heading=\"Text Changer\" mode={mode}/>\n\n</div>\n{/* \n</Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}